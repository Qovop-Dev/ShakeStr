package shakestr

func getOpposite(r rune) rune {
	// Map pour les parenthèses ouvrantes vers fermantes
	openToClose := map[rune]rune{
		40:    41,
		60:    62,
		91:    93,
		123:   125,
		171:   187,
		3898:  3899,
		3900:  3901,
		5787:  5788,
		8216:  8217,
		8223:  8221,
		8249:  8250,
		8261:  8262,
		8317:  8318,
		8333:  8334,
		8968:  8969,
		8970:  8971,
		9001:  9002,
		10088: 10089,
		10090: 10091,
		10092: 10093,
		10094: 10095,
		10096: 10097,
		10098: 10099,
		10100: 10101,
		10181: 10182,
		10214: 10215,
		10216: 10217,
		10218: 10219,
		10220: 10221,
		10222: 10223,
		10627: 10628,
		10629: 10630,
		10631: 10632,
		10633: 10634,
		10635: 10636,
		10637: 10638,
		10639: 10640,
		10641: 10642,
		10643: 10644,
		10645: 10646,
		10647: 10648,
		10712: 10713,
		10714: 10715,
		10748: 10749,
		11778: 11779,
		11780: 11781,
		11785: 11786,
		11788: 11789,
		11804: 11805,
		11808: 11809,
		11810: 11811,
		11812: 11813,
		11814: 11815,
		11816: 11817,
		12296: 12297,
		12298: 12299,
		12300: 12301,
		12302: 12303,
		12304: 12305,
		12308: 12309,
		12310: 12311,
		12312: 12313,
		12314: 12315,
		12317: 12318,
		64831: 64830,
		65047: 65048,
		65077: 65078,
		65079: 65080,
		65081: 65082,
		65083: 65084,
		65085: 65086,
		65087: 65088,
		65089: 65090,
		65091: 65092,
		65095: 65096,
		65113: 65114,
		65115: 65116,
		65117: 65118,
		65288: 65289,
		65339: 65341,
		65371: 65373,
		65375: 65376,
		65378: 65379,
	}

	// Map pour les parenthèses fermantes vers ouvrantes
	closeToOpen := map[rune]rune{
		41:    40,
		62:    60,
		93:    91,
		125:   123,
		187:   171,
		3899:  3898,
		3901:  3900,
		5788:  5787,
		8217:  8216,
		8221:  8223,
		8250:  8249,
		8262:  8261,
		8318:  8317,
		8334:  8333,
		8969:  8968,
		8971:  8970,
		9002:  9001,
		10089: 10088,
		10091: 10090,
		10093: 10092,
		10095: 10094,
		10097: 10096,
		10099: 10098,
		10101: 10100,
		10182: 10181,
		10215: 10214,
		10217: 10216,
		10219: 10218,
		10221: 10220,
		10223: 10222,
		10628: 10627,
		10630: 10629,
		10632: 10631,
		10634: 10633,
		10636: 10635,
		10638: 10637,
		10640: 10639,
		10642: 10641,
		10644: 10643,
		10646: 10645,
		10648: 10647,
		10713: 10712,
		10715: 10714,
		10749: 10748,
		11779: 11778,
		11781: 11780,
		11786: 11785,
		11789: 11788,
		11805: 11804,
		11809: 11808,
		11811: 11810,
		11813: 11812,
		11815: 11814,
		11817: 11816,
		12297: 12296,
		12299: 12298,
		12301: 12300,
		12303: 12302,
		12305: 12304,
		12309: 12308,
		12311: 12310,
		12313: 12312,
		12315: 12314,
		12318: 12317,
		64830: 64831,
		65048: 65047,
		65078: 65077,
		65080: 65079,
		65082: 65081,
		65084: 65083,
		65086: 65085,
		65088: 65087,
		65090: 65089,
		65092: 65091,
		65096: 65095,
		65114: 65113,
		65116: 65115,
		65118: 65117,
		65289: 65288,
		65341: 65339,
		65373: 65371,
		65376: 65375,
		65379: 65378,
	}

	if val, found := openToClose[r]; found {
		return val

	} else {
		if val, found := closeToOpen[r]; found {
			return val

		} else {
			return r
		}
	}
}
